#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
SAFE_SELF="/usr/local/bin/minecraftctl"

WORKING_DIRECTORY="/opt/minecraft"
MINECRAFT_USER="minecraft"
SYSTEMD_UNIT_NAME="minecraft"
SCREEN_NAME="minecraft"

print_help() {
  echo "Usage: $(basename "$0") [console|run|status|start|stop|restart|enable|disable] INSTANCE" >&2
  echo "    OR $(basename "$0") run INSTANCE COMMAND" >&2
  echo "    OR $(basename "$0") create NEW_INSTANCE SERVER_JAR" >&2
}

require_no_arguments() {
  if [[ $# -ne 0 ]]; then
    print_help
  fi
}

if [[ $# -lt 2 ]]; then
  print_help
  exit
fi

if [[ "$(id -un)" != "$MINECRAFT_USER" ]]; then
  sudo -n -u "$MINECRAFT_USER" "$SAFE_SELF" "$@"
  exit
fi

command=$1
instance=$2
shift 2

if [[ ! -d "$WORKING_DIRECTORY/$instance" && "$command" != create ]]; then
  echo "Unknown instance: $instance" >&2
  exit 2
fi

case "$command" in
run)
  if [[ $# -eq 0 ]]; then
    echo -n "Command: "
    IFS= read -er mc_command
  else
    OLD_IFS="$IFS"
    IFS=' '
    mc_command="$*"
    IFS="$OLD_IFS"
  fi
  script -qc "screen -S '$SCREEN_NAME-$instance' -p 0 -X stuff $(printf '%q' "$mc_command")\015" /dev/null
  ;;
console)
  require_no_arguments "$@"
  script -qc "screen -x '$SCREEN_NAME-$instance'" /dev/null
  ;;
start | stop | restart | status | enable | disable)
  require_no_arguments "$@"
  systemctl "$command" "$SYSTEMD_UNIT_NAME@$instance.service"
  ;;
create)
  if [[ $# -ne 1 ]]; then
    print_help
    exit 1
  fi
  jar_file="$1"
  jar_file_name="$(basename "$jar_file")"
  shift
  mkdir "$WORKING_DIRECTORY/$instance"
  cp "$jar_file" "$WORKING_DIRECTORY/$instance/$jar_file_name"
  if [[ "$jar_file_name" != minecraft_server.jar ]]; then
    ln -s "$jar_file_name" "$WORKING_DIRECTORY/$instance/minecraft_server.jar"
  fi
  echo "eula=true" >"$WORKING_DIRECTORY/$instance/eula.txt"
  ;;
*)
  print_help
  exit 1
  ;;
esac
